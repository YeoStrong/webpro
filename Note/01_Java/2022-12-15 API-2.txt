API-2

1. 수학적 계산에 사용되는 클래스 Math

	※ Math 클래스가 제공하는 정적 메소드
	※ Math 클래스의 상수
	public class MathEx1 {
		public static void main(String[] args) {
			//Math의 static method 실습
			System.out.println("2의 3승 : "+Math.pow(2, 3));
			System.out.println("-9.9의 절대값:"+Math.abs(-9.9));
			System.out.println("16의 제곱근 : "+Math.sqrt(16));
			System.out.println("4와 7중에 작은값:"+Math.min(4, 7));
			System.out.println("7과 9중 최대값:"+Math.max(7, 9));
			//Math의 static final 변수(상수)
		}
	}
	※ Math 수학 계산에 유용한 메서드들
	public class MathEx2 {
		public static void main(String[] args) {
			System.out.println(" 소숫점에서 반올림, 올림, 버림");
			System.out.println("9.12의 올림 : "+Math.ceil(9.12));
			System.out.println("9.69의 반올림 : "+Math.round(9.69));
			System.out.println("9.69 버림 : "+Math.floor(9.69));
			System.out.println("소숫점 한자리에서 반올림, 올림, 버림");
			System.out.println("9.12의 올림 : "+Math.ceil(9.12*10)/10);
			System.out.println("9.69의 반올림 : "+Math.round(9.69*10)/10.0);
			System.out.println("9.69 버림 : "+Math.floor(9.69*10)/10);
			System.out.println("십의 자리에서 반올림, 올림, 버림");
			System.out.println("11의 올림 : "+Math.ceil(11/10.0)*10);
			System.out.println("19의 반올림 : "+Math.round(19/10.0)*10);
			System.out.println("19 버림 : "+Math.floor(19/10.0)*10);
		}
	}

2. 난수 발생이 쉬운 Random 클래스
다양한 랜덤 숫자를 구하는 작업을 제공

	※Random 클래스
	사용법이 아주 쉬워 요즘 많이 쓰이고 있는 클래스. 일반메소드는 객체를 생성 후 실행가능
		public static void main(String[] args) {
			Random random = new Random();
			int iran = random.nextInt(10);	//0~9까지의 난수
			double doubleran = random.nextDouble(); //Math.random()과 같음

3. 자바 클래스의 상속 계층
	여러 클래스의 공통된 특성(공통데이터와 메소드)은 슈퍼클래스로 선언하는 것이 좋다는 사실을 상속에서 접했습니다. JDK 라이브러리 개발자들도 그런 식으로 상속관계를 갖도록 클래스를 설계했기 때문에 비슷한 기능의 클래스들이 같은 슈퍼 클래스를 갖게 되는 경우를 종종 볼 수 있습니다.
	그런데 클래스의 어떤 특성은 특정 부류의 클래스 뿐 아니라 자바의 모든 클래스들이 공통으로 갖습니다. 그래서 자바에서는 그런 공통 특성을 추출하여 Object라는 클래스로 만들어 두었습니다. 그리고 다른 모든 클래스들은 Object 클래스를 상속 받도록 만들어 두었습니다.
	extends Object라는 단어가 없어도 컴파일 과정에서 자동적으로 Object 의 서브 클래스가 된다.

※ Object클래스의 메소드들

	public String toString() 객체의 문자열을 반환
	public boolean equals(Object obj)
	public int hashCode() 자바에서 객체를 식별하는 정수 값인 해시 코드를 반환(다량의 데이터를 저장&검색하는 해싱 기법에 사용) 
	public Class getClass() 객체의 클래스 이름을 Class형으로 반환.
	1) toString(); 객체의 정보를 문자열로 제공할 목적으로 정의된 메소드.
	   	  자바는 사용자가 모르게 내부적으로 동작하는 메소드 들이 많은데 그 중 하나가 toString().

	2) clone 메소드(객체를 복제하는 메소드)
		객체 자신을 복제해서 새로운 객체를 생성하는 메소드
		Cloneable 인터페이스를 구현한 클래스의 인스턴스만 복제할 수 있다.
		Object 클래스에 정의된 clone()은 인스턴스 변수의 값만 복제한다.
		인스턴스 변수가 참조형일 때 참조하는 객체도 복제되게 오버라이딩해야 함.

	3) getClass메소드 : 객체가 속하는 클래스의 정보(이름)를 리턴
	4) getSuperclass메소드 : 슈퍼클래스의 정보를 리턴


