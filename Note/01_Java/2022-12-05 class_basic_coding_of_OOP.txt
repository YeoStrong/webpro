클래스 – 객체지향 프로그램의 기본 코딩방법

1. 클래스 제작 (ExClass.java)
  package com.lec.ex; 
	public class ExClass { //반드시 대문자로 시작, 알파벳, 숫자($는 오라클사에서 만드는 클라스, 우리는 안붙임)
		private 자료형 인스턴스변수( = 속성 = 필드)명;
		public ExClass(){ 	}
		public method(){
		. . .
		}
	}
		① 패키지명
		② 클래스명
		③ 데이터***(인스턴스 변수=멤버변수, 필드) : 이 데이터는 생성자나 setter를 이용해서 초기화하지 않으면 객체는 null, 숫자는 0, boolean은 false로 초기화되어 들어감
		④ 생성자함수 : 클래스명과 똑같이 리턴타입이 없는 메소드를 생성자라 하며 처음 클래스형 객체를 만들때 호출된다. 모든 클래스는 반드시 하나 이상의 생성자가 있어야 함. 만약 하나도 없으면 JVM이 디폴트 생성자를 만들어 준다(new 연산자로 호출되는 메소드)
		⑤ 메소드***
		⑥ Getter & setter*

2. 생성자의 이해 : 생성자는 매개변수 있는 생성자와 매개변수 없는 생성자 등 여러 종류의 생성자를 가질 수 있음. 생성자가 없을 때는 디폴트 생성자가 컴파일러 단계에서 자동 생성. 
		한 개 이상의 생성자가 있으면 디폴트 생성자는 자동 생성되지 않음.

		클래스		객체

		--------------------------

		설계도		제품

		객체 ≒ 인스턴스

3. this키워드의 이해 :this란 객체 자신


객체지향 프로그래밍의 특징
	(1) 캡슐화와 데이터은닉
	(2) 다형성 : 같은 모습이지만 다른 기능 cf.오버로딩
	(3) 상속
